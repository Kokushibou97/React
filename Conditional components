let name; 
if (Math.random() > 0.5) { 
	name = "Mike" 
} else { 
	name = "Susan" 
} 

let name; 
let newUser = true; 
if (Math.random() > 0.5 && newUser) { 
	name = "Mike" 
} else { 
	name = "Susan" 
} 

Conditional rendering is built on the same principle. By using conditions, it can return different child components. 
This is often done using the props that are passed into the parent component, but can also be done based on component state.

Let’s take a look at a simple example:

function LogInOutButton(props) {
const isLoggedIn = props.isLoggedIn;
  if (isLoggedIn) {
    return <LogoutButton />;
  } else {
  return <LoginButton />;
}

Then when the LogInOutButton parent component is used, the prop can be passed in.
<LogInOutButton isLoggedIn={false} />
