state is all the app data which is currently working with. That being said, it can be decide to conditionally render specific components in the app, based on whether specific state data has specific values. 
To make this possible, React works with the readily available JavaScript syntax and concepts.

Considering a minimalistic productivity app. The app takes the client computer’s current datetime, and based on the data, displays one of two messages on the screen:
For workdays, the message is: “Get it done” 
For weekends, the message is: “Get some rest” 

There are a few ways that can be achieved in React.
One approach would include setting a component for each of the possible messages, which means you’d have two components.
Then, the CurrentMessage component, which would render the appropriate component based on the value returned from the getDay() function call.

Simplified CurrentMessage component:
function CurrentMessage() {
    const day = new Date().getDay();
    if (day >= 1 && day <= 5) {
        return <Workdays />
    }
    return <Weekends />
}

Instead of calculating it directly, it could use some historical data instead, and perhaps get that data from a user via an input, from a parent component.

In that case, the CurrentMessage component might look like this:
function CurrentMessage(props) {
    if (props.day >= 1 && props.day <= 5) {
        return <Workdays />
    }
    return <Weekends />
}

----------------------------------------------------------------------------------------------------------------------------------------------------------
Conditional rendering with the help of element variables to further improve CurrentMessage component:

function CurrentMessage({day}) {
    const weekday = (day >= 1 && day <= 5);
    const weekend = (day >= 6 && day <= 7);
    let message;

    if (weekday) {
        message = <Workdays />
    } else if (weekend) {
        message = <Weekends />
    } else {
        message = <ErrorComponent />
    }

    return (
        <div>
            {message}
        </div>
    )
}

The output of the CurrentMessage component will depend on what the received value of the day variable is. 
On the condition of the day variable having the value of any number between 1 and 5 (inclusive), the output will be the contents of the Workdays component. 
Otherwise, on the condition of the day variable having the value of either 6 or 7, the output will be the contents of the Weekends component.
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Conditional rendering using the logical AND operator:
In the following component, here's how the && operator is used to achieve conditional rendering:
function LogicalAndExample() {
    const val = prompt('Anything but a 0')

    return (
        <div>
            <h1>Please don't type in a zero</h1>
            {val &&
                <h2>Yay, no 0 was typed in!</h2>
            }
        </div>
    )
}
